// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: copyfrom.go

package rdbms

import (
	"context"
)

// iteratorForInsertManyMetadata implements pgx.CopyFromSource.
type iteratorForInsertManyMetadata struct {
	rows                 []InsertManyMetadataParams
	skippedFirstNextCall bool
}

func (r *iteratorForInsertManyMetadata) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForInsertManyMetadata) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].ID,
		r.rows[0].Symbol,
		r.rows[0].Locale,
		r.rows[0].Market,
	}, nil
}

func (r iteratorForInsertManyMetadata) Err() error {
	return nil
}

func (q *Queries) InsertManyMetadata(ctx context.Context, arg []InsertManyMetadataParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"product_meta"}, []string{"id", "symbol", "locale", "market"}, &iteratorForInsertManyMetadata{rows: arg})
}
